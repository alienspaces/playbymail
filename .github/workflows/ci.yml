name: CI

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'tools/**'
  pull_request:
    branches: [main]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17.5-alpine
        env:
          POSTGRES_DB: playbymail
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U user" --health-interval=10s --health-timeout=5s --health-retries=5
    env:
      DATABASE_URL: postgres://user:pass@localhost:5432/playbymail?sslmode=disable
      DATABASE_VERSION: 17.5
      DATABASE_MAX_OPEN_CONNECTIONS: 180
      DATABASE_MAX_IDLE_CONNECTIONS: 45
      DATABASE_MAX_IDLE_TIME_MINS: 15
      APP_ENV: develop
      PORT: 8080
      LOG_LEVEL: debug
      GO_VERSION: 1.23.5
      APP_EMAILER_FAKE: "true"
      APP_SMTP_HOST: "localhost:2525"
      JOBCLIENT_MAX_WORKERS: 10
      TZ: UTC
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.5
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential git postgresql-client
      - name: Run backend tests
        run: ./tools/test-backend-ci

  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Run frontend tests
        run: ./tools/test-frontend

  build-frontend:
    runs-on: ubuntu-latest
    needs: test-frontend
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dependencies
        run: |
          cd frontend
          npm install
      - name: Build frontend
        run: |
          cd frontend
          npm run build
      - name: Upload frontend build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist

  deploy-backend:
    runs-on: ubuntu-latest
    needs: [test-backend, build-frontend]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.5
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y git bash git-subtree
      - name: Download frontend build
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: /tmp/frontend-dist
      - name: Prepare deploy branch
        run: |
          git config --global user.email "alienspaces@gmail.com"
          git config --global user.name "Alien Spaces"
          git subtree split --prefix backend -b heroku-deploy
          git checkout heroku-deploy
          cp -r /tmp/frontend-dist public
          git add public
          git commit -m "Add frontend build artifacts" || echo "No changes to commit"
          go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@v4.17.1
          go install github.com/riverqueue/river/cmd/river@latest
          mkdir -p bin
          cp /home/runner/go/bin/migrate bin/
          cp /home/runner/go/bin/river bin/
          chmod +x bin/migrate bin/river
          git add bin/migrate bin/river
          git commit -m "Add migrate and river binaries for Heroku release phase" || echo "No changes to commit"
          git checkout -
      - name: Deploy to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git heroku-deploy:main --force 