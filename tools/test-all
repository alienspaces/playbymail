#!/usr/bin/env sh

set -e

echo "üß™ Running frontend and backend tests..."
echo "============================================="

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_header() {
    echo -e "${BLUE}üîç $1${NC}"
    echo "----------------------------------------"
}

# Check if we're in the right directory
if [ ! -f "backend/go.mod" ]; then
    print_error "Must be run from playbymail root directory"
    exit 1
fi

# Track test results
TESTS_PASSED=0
TESTS_FAILED=0

# Run Frontend Tests
print_header "Running Frontend Tests"
if ./tools/test-frontend; then
    print_status "Frontend tests passed"
    TESTS_PASSED=$((TESTS_PASSED+1))
else
    print_error "Frontend tests failed"
    TESTS_FAILED=$((TESTS_FAILED+1))
fi

echo ""
pwd

# Run Backend Tests
print_header "Running Backend Tests"
if ./tools/test-backend; then
    print_status "Backend tests passed"
    TESTS_PASSED=$((TESTS_PASSED+1))
else
    print_error "Backend tests failed"
    TESTS_FAILED=$((TESTS_FAILED+1))
fi

echo ""
echo "============================================="
echo "üß™ Test Results Summary"
echo "============================================="

if [ $TESTS_FAILED -eq 0 ]; then
    print_status "All tests passed! üéâ"
    print_status "Tests passed: $TESTS_PASSED"
    print_info "You are ready to develop or deploy!"
    exit 0
else
    print_error "Some tests failed"
    print_status "Tests passed: $TESTS_PASSED"
    print_error "Tests failed: $TESTS_FAILED"
    print_warning "Please fix the failing tests before proceeding."
    exit 1
fi 